name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clona la rama correcta (feature o develop)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # 2Ô∏è‚É£ Configura .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # üîç Debug paths (opcional)
      - name: Debug paths
        run: |
          pwd
          ls -R ${{ github.workspace }}

      # 3Ô∏è‚É£ Restaurar dependencias de toda la soluci√≥n
      - name: Restore backend dependencies
        run: dotnet restore ${{ github.workspace }}/Auth.sln

      # 4Ô∏è‚É£ Compilar toda la soluci√≥n
      - name: Build backend
        run: dotnet build ${{ github.workspace }}/Auth.sln --configuration Release --no-restore

      # 5Ô∏è‚É£ Ejecutar tests de toda la soluci√≥n
      - name: Run backend tests
        run: dotnet test ${{ github.workspace }}/Auth.sln --no-build --verbosity normal

      # 6Ô∏è‚É£ Instalar dependencias frontend
      - name: Install frontend dependencies
        working-directory: ${{ github.workspace }}/frontend
        run: npm install

      # 7Ô∏è‚É£ Build frontend
      - name: Build frontend
        working-directory: ${{ github.workspace }}/frontend
        run: npm run build

      # 8Ô∏è‚É£ Publicar backend (empaquetar artefacto final)
      - name: Publish backend
        run: dotnet publish ${{ github.workspace }}/backend/Web.API/Web.API.csproj -c Release -o ${{ github.workspace }}/publish/backend

      # 9Ô∏è‚É£ Guardar artefactos
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: ${{ github.workspace }}/publish

  # üöÄ Deploy por FTP (solo en PR a main)
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          path: ${{ github.workspace }}/publish

      # üíæ Despliegue FTP (descoment√° para usarlo)
      # - name: Deploy via FTP
      #   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #   with:
      #     server: ${{ secrets.FTP_HOST }}
      #     username: ${{ secrets.FTP_USER }}
      #     password: ${{ secrets.FTP_PASS }}
      #     local-dir: ${{ github.workspace }}/publish/backend
      #     server-dir: /path/to/your/site/
